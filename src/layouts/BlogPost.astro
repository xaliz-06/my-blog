---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import {Calendar, Clock10, ArrowBigLeft, ArrowBigRight} from '@lucide/astro'
import { Picture } from 'astro:assets';
import { formatRelativeDate } from '@/lib/date-formatter';
import { Separator } from '@/components/ui/separator';
import { Button } from '@/components/ui/button';
import TagsList from '@/components/blog/TagsList.tsx';
import Comments from '@/components/Comments.astro';
import { createImageUrl } from '@/lib/utils';


type Props = CollectionEntry<'blog'>['data'] & {id: string, isAbout?: boolean};

const { id, title, description, pubDate, updatedDate, heroImage, primaryTags, author, minutesToRead, secondaryTags, nextBlogPost, prevBlogPost, isAbout } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
	</head>

	<body class="font-roboto-mono bg-purple-200">
		<Header />
		<main class="mt-8 mb-28 mx-auto max-w-5xl">
			<article class="min-h-screen font-archivo flex flex-col justify-center items-center w-[90vw] mx-auto lg:w-full">
				<div class="mt-4 mb-4 mx-auto w-full flex justify-center items-center">
					{heroImage && <Picture src={createImageUrl(heroImage)} formats={['png', 'avif', 'webp']} alt={`hero image for ${title}`} width={50} height={50} class="w-full" />}
				</div>
				<div class="w-full mx-auto">
					<div class="mt-4 flex-col space-y-8">
						<div class="flex flex-col gap-4 md:gap-0 md:flex-row md:justify-between">
							<div class="flex-4 flex flex-col space-y-2">
								<h1 class="text-3xl md:text-5xl tracking-tight font-semibold">{title}</h1>
								<p class="tracking-wide font-light text-sm md:text-lg"><i>By {author} on {pubDate.toLocaleDateString()}</i></p>
							</div>
							<div class="flex-1 flex flex-col items-start text-xs lg:text-base">
								<div class="flex gap-0.5 md:gap-2 items-center justify-center text-gray-600">
									<Calendar class='scale-50 lg:scale-75' />
									{formatRelativeDate(pubDate)}
								</div>
								<div class="flex gap-0.5 md:gap-2 items-center justify-center text-gray-600">
									<Clock10 class='scale-50 lg:scale-75' />
									<p>{minutesToRead} minutes to read</p>
								</div>
							</div>
						</div>
						<div class="flex gap-2 mb-4 flex-wrap">
							<TagsList client:load primaryTags={primaryTags} secondaryTags={secondaryTags}/>
						</div>
						<div class="mb-8">
							<p class="text-md md:text-xl text-gray-700 font-light">{description}</p>
						</div>
					</div>
					<div class="h-8 mb-8 ">
						<Separator/>
					</div>
					<div class="prose-lg prose-p:text-sm md:prose-p:text-lg prose-p:leading-snug prose-h5:text-sm prose-h6:text-xs prose-a:underline prose-a:underline-offset-4 prose-a:decoration-2 prose-a:font-bold prose-a:text-purple-600 prose-a:hover:text-purple-800">
						<slot />
					</div>
					{!isAbout && <div class="mt-20 mb-4 flex justify-between items-center">
						
						<Button variant={"outline"} disabled={!nextBlogPost} className="min-w-[10%] h-[40px] md:min-w-[20%] md:h-[55px] rounded-none border-orange-400 border-4 cursor-pointer bg-orange-400 -translate-x-1 -translate-y-1 transition-all duration-300 ease-in-out text-white shadow-[5px_5px_0px_0px_#000] shadow-black relative hover:-translate-x-2 hover:-translate-y-2 hover:shadow-[8px_8px_0px_0px_#000] hover:shadow-black hover:bg-indigo-500 hover:border-indigo-500 hover:text-white disabled:cursor-not-allowed"
							onClick={() => (window.location.href = `/blog/${nextBlogPost}`)}>
							<ArrowBigLeft class="inline mr-2 scale-175" />
							<p class="text-lg md:text-2xl font-semibold">NEXT</p>
						</Button>
						<Button variant={"outline"} disabled={!prevBlogPost} className="min-w-[10%] h-[40px] md:min-w-[20%] md:h-[55px] rounded-none border-orange-400 border-4 cursor-pointer bg-orange-400 -translate-x-1 -translate-y-1 transition-all duration-300 ease-in-out text-white shadow-[-5px_5px_0px_0px_#000] shadow-black relative hover:translate-x-2 hover:-translate-y-2 hover:shadow-[-8px_8px_0px_0px_#000] hover:shadow-black hover:bg-indigo-500 hover:border-indigo-500 hover:text-white disabled:cursor-not-allowed"
						onClick={() => (window.location.href = `/blog/${prevBlogPost}`)}>
							<p class="text-lg md:text-2xl font-semibold">PREVIOUS</p>
							<ArrowBigRight class="inline ml-2 scale-175" />
						</Button>
					</div>}
					{!isAbout && <div class="mt-20 mb-20">
						<div class="mt-4 mb-2 flex flex-col gap-1 md:gap-3 font-roboto-mono">
							<h2 class="text-3xl md:text-5xl font-bold tracking-tight">ðŸ’¬ COMMENTS</h2>
							<div class="w-[100%] md:w-[50%] border-3 border-black bg-fuchsia-800 h-[10px]"></div>
						</div>
						<Comments postSlug={id} />	
					</div>}
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
